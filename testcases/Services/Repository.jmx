<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
    <hashTree>
      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Repository" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Repository" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${PATH}/goto.php?target=root_1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="ilGetRepositoryHeaderImage" enabled="true">
            <stringProp name="HtmlExtractor.refname">ilGetRepositoryHeaderImage</stringProp>
            <stringProp name="HtmlExtractor.expr">#headerimage</stringProp>
            <stringProp name="HtmlExtractor.attribute">src</stringProp>
            <stringProp name="HtmlExtractor.default">#NV</stringProp>
            <stringProp name="HtmlExtractor.match_number"></stringProp>
            <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="ilGetRepositoryBreadcrumbUrl" enabled="true">
            <stringProp name="HtmlExtractor.refname">ilGetRepositoryBreadcrumbUrl</stringProp>
            <stringProp name="HtmlExtractor.expr">ol.breadcrumb a</stringProp>
            <stringProp name="HtmlExtractor.attribute">href</stringProp>
            <stringProp name="HtmlExtractor.default">#NV</stringProp>
            <stringProp name="HtmlExtractor.match_number"></stringProp>
            <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="ilGetRepositoryBreadcrumbContent" enabled="true">
            <stringProp name="HtmlExtractor.refname">ilGetRepositoryBreadcrumbContent</stringProp>
            <stringProp name="HtmlExtractor.expr">ol.breadcrumb a</stringProp>
            <stringProp name="HtmlExtractor.attribute"></stringProp>
            <stringProp name="HtmlExtractor.default">#NV</stringProp>
            <stringProp name="HtmlExtractor.match_number"></stringProp>
            <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="ilGetRepositoryHeaderContent" enabled="true">
            <stringProp name="HtmlExtractor.refname">ilGetRepositoryHeaderContent</stringProp>
            <stringProp name="HtmlExtractor.expr">#il_mhead_t_focus</stringProp>
            <stringProp name="HtmlExtractor.attribute"></stringProp>
            <stringProp name="HtmlExtractor.default">#NV</stringProp>
            <stringProp name="HtmlExtractor.match_number"></stringProp>
            <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
          </HtmlExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ilGetRepositoryHeaderImage" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-167724106">/images/icon_root.svg</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ilGetRepositoryHeaderImage</stringProp>
            <stringProp name="TestPlan.comments">sanity check if we are on the right page (and not forced to change password, accept user agreement, etc.)</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ilGetRepositoryBreadcrumbContent" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2240617">${ilGetRepositoryHeaderContent}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ilGetRepositoryBreadcrumbContent</stringProp>
            <stringProp name="TestPlan.comments">sanity check, that we picked the right breadcrumb (must match the header)</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ilGetRepositoryBreadcrumbUrl" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1449016747">ilias\.php\?ref\_id\=1\&amp;cmd\=frameset\&amp;cmdClass\=ilrepositorygui\&amp;cmdNode\=[^&amp;]*\&amp;baseClass\=ilRepositoryGUI1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ilGetRepositoryBreadcrumbUrl</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ilGetRepositoryHeaderContent" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-856324859">(?!#NV).+</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ilGetRepositoryHeaderContent</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
